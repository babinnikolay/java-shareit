DROP TABLE IF EXISTS REQUEST CASCADE;
DROP TABLE IF EXISTS USERS CASCADE;
DROP TABLE IF EXISTS BOOKING CASCADE;
DROP TABLE IF EXISTS ITEM CASCADE;
DROP TABLE IF EXISTS COMMENT CASCADE;

CREATE TABLE IF NOT EXISTS USERS (
    USER_ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    USER_NAME VARCHAR(255) NOT NULL,
    USER_EMAIL VARCHAR(512),
    CONSTRAINT PK_USER PRIMARY KEY(USER_ID),
    CONSTRAINT UQ_USER_EMAIL UNIQUE (USER_EMAIL)
);

CREATE TABLE IF NOT EXISTS REQUEST (
    REQUEST_ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    REQUEST_DESCRIPTION VARCHAR(512),
    USER_ID BIGINT NOT NULL,
    CREATED TIMESTAMPTZ DEFAULT now(),
    CONSTRAINT PK_REQUEST PRIMARY KEY(REQUEST_ID)
);

CREATE TABLE IF NOT EXISTS ITEM(
    ITEM_ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    ITEM_NAME VARCHAR(255) NOT NULL,
    ITEM_DESCRIPTION VARCHAR(512),
    ITEM_AVAILABLE BOOLEAN NOT NULL,
    OWNER_ID BIGINT NOT NULL,
    REQUEST_ID BIGINT,
    CONSTRAINT PK_ITEM PRIMARY KEY(ITEM_ID),
    CONSTRAINT FK_OWNER FOREIGN KEY(OWNER_ID) REFERENCES USERS(USER_ID),
    CONSTRAINT FK_REQUEST FOREIGN KEY(REQUEST_ID) REFERENCES REQUEST(REQUEST_ID)
);

CREATE TABLE IF NOT EXISTS BOOKING (
     BOOKING_ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
     BOOKING_START TIMESTAMPTZ,
     BOOKING_END TIMESTAMPTZ,
     ITEM_ID BIGINT NOT NULL,
     BOOKER_ID BIGINT NOT NULL,
     STATUS VARCHAR(20) NOT NULL,
     CONSTRAINT PK_BOOKING PRIMARY KEY(BOOKING_ID),
     CONSTRAINT FK_ITEM FOREIGN KEY(ITEM_ID) REFERENCES ITEM(ITEM_ID),
     CONSTRAINT FK_BOOKER FOREIGN KEY (BOOKER_ID) REFERENCES USERS(USER_ID)
);

CREATE TABLE IF NOT EXISTS COMMENT (
    COMMENT_ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    COMMENT_TEXT VARCHAR(500),
    ITEM_ID BIGINT NOT NULL,
    AUTHOR_ID BIGINT NOT NULL,
    CREATED TIMESTAMPTZ DEFAULT now(),
    CONSTRAINT PK_COMMENT PRIMARY KEY (COMMENT_ID),
    CONSTRAINT FK_ITEM FOREIGN KEY (ITEM_ID) REFERENCES ITEM(ITEM_ID),
    CONSTRAINT FK_AUTHOR FOREIGN KEY (AUTHOR_ID) REFERENCES USERS(USER_ID)
);